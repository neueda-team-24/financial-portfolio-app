{"version":3,"sources":["logo.svg","screens/homepage/Card.js","screens/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","props","this","card","image_url","name","cost","price","profit","isProfitable","Grid","item","xs","sm","md","src","alt","Typography","variant","style","color","Tooltip","title","toFixed","display","className","classes","profitable","loss","Math","abs","PureComponent","withStyles","theme","Homepage","fetchData","a","axios","get","headers","then","res","data","user","cards","setState","catch","error","console","log","componentDidMount","state","CircularProgress","marginTop","marginBottom","total_profit_loss","container","direction","spacing","justify","alignItems","gridContainer","padding","total_asset_value","length","map","index","maxWidth","App","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b848160.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Tooltip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  profitable: {\r\n    color: \"#80D878\",\r\n  },\r\n  loss: {\r\n    color: \"#EC5858\",\r\n  },\r\n});\r\n\r\nclass PokemonCard extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { image_url, name, cost, price } = this.props.card;\r\n    const profit = price - cost;\r\n    const isProfitable = profit >= 0;\r\n\r\n    return (\r\n      <Grid item xs={10} sm={6} md={3}>\r\n        <img src={image_url} alt={\"Pokemon Card of \" + name} />\r\n        <Typography variant=\"h6\" style={{ color: \"beige\" }}>\r\n          <b>{name}</b>\r\n        </Typography>\r\n        <Tooltip title=\"Current Price (Profit / Loss)\">\r\n          <Typography variant={\"subtitle1\"} style={{ color: \"beige\" }}>\r\n            ${price.toFixed(2)}{\" \"}\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"subtitle1\"\r\n              className={\r\n                isProfitable\r\n                  ? this.props.classes.profitable\r\n                  : this.props.classes.loss\r\n              }\r\n            >\r\n              ({isProfitable ? \"+\" : \"-\"}${Math.abs(profit).toFixed(2)})\r\n            </Typography>\r\n          </Typography>\r\n        </Tooltip>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PokemonCard);\r\n","import { React, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Tooltip, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport PokemonCard from \"./Card\";\r\nimport axios from \"axios\";\r\n\r\nconst styles = (theme) => ({\r\n  gridContainer: {\r\n    maxWidth: \"100%\",\r\n    padding: \"30px\",\r\n  },\r\n  profitable: {\r\n    color: \"#80D878\",\r\n  },\r\n  loss: {\r\n    color: \"#EC5858\",\r\n  },\r\n});\r\n\r\nclass Homepage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      cards: null,\r\n    };\r\n  }\r\n\r\n  fetchData = async () => {\r\n    const result = await axios\r\n      .get(\r\n        \"https://vn6t1iuloj.execute-api.ap-southeast-1.amazonaws.com/appData\",\r\n        {\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const { user, cards } = res.data;\r\n        this.setState({\r\n          user: { ...user },\r\n          cards: [...cards],\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.cards || !this.state.user) {\r\n      // return loading component\r\n\r\n      return (\r\n        <CircularProgress style={{ marginTop: \"45vh\", marginBottom: \"50vh\" }} />\r\n      );\r\n    }\r\n\r\n    const isProfitable = this.state.user.total_profit_loss >= 0;\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={7}\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        className={this.props.classes.gridContainer}\r\n      >\r\n        <Grid xs={12} style={{ padding: \"30px\" }}>\r\n          <Typography variant=\"h4\" style={{ color: \"beige\" }}>\r\n            <b>Your Collection</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <Typography variant=\"h6\" style={{ color: \"beige\" }}>\r\n            Total Asset Value: ${this.state.user.total_asset_value.toFixed(2)}{\" \"}\r\n          </Typography>\r\n\r\n          <Typography variant=\"h6\" style={{ color: \"beige\" }}>\r\n            Unrealised Gains / Losses:{\" \"}\r\n            <Tooltip title=\"Unrealised Gains / Losses\">\r\n              <Typography\r\n                display=\"inline\"\r\n                variant=\"h6\"\r\n                className={\r\n                  isProfitable\r\n                    ? this.props.classes.profitable\r\n                    : this.props.classes.loss\r\n                }\r\n              >\r\n                {isProfitable ? \"+\" : \"-\"}$\r\n                {Math.abs(this.state.user.total_profit_loss).toFixed(2)}\r\n              </Typography>\r\n            </Tooltip>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <Typography variant=\"h6\" style={{ color: \"beige\" }}>\r\n            Total Number of Cards: {this.state.cards.length}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {this.state.cards.map((card, index) => (\r\n          <PokemonCard key={index} card={card} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Homepage);\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Homepage from \"./screens/homepage/Homepage.js\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage:\n          \"url(\" +\n          \"https://assets.pokemon.com/static2/_ui/img/chrome/body_bg.png\" +\n          \")\",\n        backgroundPosition: \"center\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\",\n      }}\n    >\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}