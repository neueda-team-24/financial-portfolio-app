{"version":3,"sources":["logo.svg","screens/homepage/Card.js","screens/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","props","this","card","image_url","name","cost","price","profit","isProfitable","Grid","item","xs","sm","md","src","alt","Typography","variant","toFixed","display","className","classes","profitable","loss","PureComponent","withStyles","theme","color","Homepage","componentDidMount","state","user","total_asset_value","total_profit_loss","cards","container","direction","spacing","justify","alignItems","gridContainer","align","map","index","maxWidth","padding","App","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAAe,I,0ECeTA,E,kDACJ,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,MAAyCC,KAAKD,MAAME,KAA5CC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAAMC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,MACzBC,EAASD,EAAQD,EACjBG,EAAeD,GAAU,EAE/B,OACE,eAACE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACE,qBAAKC,IAAKX,EAAWY,IAAK,mBAAqBX,IAC/C,cAACY,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACE,4BAAIb,MAEN,eAACY,EAAA,EAAD,CAAYC,QAAS,YAArB,cACIX,EAAMY,QAAQ,GAAI,IACpB,eAACF,EAAA,EAAD,CACEG,QAAQ,SACRF,QAAQ,YACRG,UACEZ,EACIP,KAAKD,MAAMqB,QAAQC,WACnBrB,KAAKD,MAAMqB,QAAQE,KAN3B,cASIf,EAAe,IAAM,IATzB,IAS+BD,EAAOW,QAAQ,GAT9C,iB,GAlBgBM,iBAmCXC,eA5CA,SAACC,GAAD,MAAY,CACzBJ,WAAY,CACVK,MAAO,SAETJ,KAAM,CACJI,MAAO,UAuCIF,CAAmB1B,GC/B5B6B,E,kDACJ,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAiHR6B,kBAAoB,aAhHlB,EAAKC,MAAQ,CACXC,KAAM,CACJ3B,KAAM,QACN4B,kBAAmB,QACnBC,kBAAmB,SAErBC,MAAO,CACL,CACE9B,KAAM,YACNC,KAAM,IACNF,UAAW,2CACXG,MAAO,QAET,CACEF,KAAM,WACNC,KAAM,IACNF,UAAW,2CACXG,MAAO,OAET,CACEF,KAAM,UACNC,KAAM,IACNF,UAAW,0CACXG,MAAO,OAET,CACEF,KAAM,QACNC,KAAM,IACNF,UAAW,4CACXG,MAAO,MAET,CACEF,KAAM,YACNC,KAAM,IACNF,UAAW,4CACXG,MAAO,QAET,CACEF,KAAM,eACNC,KAAM,IACNF,UAAW,4CACXG,MAAO,QAET,CACEF,KAAM,UACNC,KAAM,IACNF,UAAW,4CACXG,MAAO,IAET,CACEF,KAAM,oBACNC,KAAM,IACNF,UAAW,4CACXG,MAAO,KAET,CACEF,KAAM,sBACNC,KAAM,IACNF,UAAW,2CACXG,MAAO,UA7DI,E,0CAsHnB,WACE,IAAME,EAAeP,KAAK6B,MAAMC,KAAKE,mBAAqB,EAC1D,OACE,eAACxB,EAAA,EAAD,CACE0B,WAAS,EACTC,UAAU,MACVC,QAAS,EACTC,QAAQ,eACRC,WAAW,SACXnB,UAAWnB,KAAKD,MAAMqB,QAAQmB,cANhC,UAQE,eAAC/B,EAAA,EAAD,CACE0B,WAAS,EACTG,QAAS,eACTC,WAAY,WACZ5B,GAAI,GAJN,UAME,cAACF,EAAA,EAAD,CAAME,GAAI,EAAV,SACE,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKwB,MAAM,OAA/B,SACE,oDAGJ,cAAChC,EAAA,EAAD,CAAME,GAAI,EAAV,SACE,eAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKwB,MAAM,QAA/B,iCACuB,IACpBxC,KAAK6B,MAAMC,KAAKC,kBAAkBd,QAAQ,GAAI,IAC/C,eAACF,EAAA,EAAD,CACEG,QAAQ,SACRF,QAAQ,KACRG,UACEZ,EACIP,KAAKD,MAAMqB,QAAQC,WACnBrB,KAAKD,MAAMqB,QAAQE,KAN3B,cASIf,EAAe,IAAM,IATzB,KASgC,IAC7BP,KAAK6B,MAAMC,KAAKE,kBAVnB,gBAeLhC,KAAK6B,MAAMI,MAAMQ,KAAI,SAACxC,EAAMyC,GAAP,OACpB,cAAC,EAAD,CAAyBzC,KAAMA,GAAbyC,a,GAjKLnB,iBAwKRC,eArLA,SAACC,GAAD,MAAY,CACzBc,cAAe,CACbI,SAAU,OACVC,QAAS,QAEXvB,WAAY,CACVK,MAAO,SAETJ,KAAM,CACJI,MAAO,UA4KIF,CAAmBG,GC/KnBkB,MARf,WACE,OACE,qBAAK1B,UAAU,MAAM2B,MAAO,CAAEC,gBAAiB,SAA/C,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3e521caa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\nimport Card from \"./Card\";\r\nimport Axios from \"axios\";\r\n\r\nconst styles = (theme) => ({\r\n  profitable: {\r\n    color: \"green\",\r\n  },\r\n  loss: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nclass PokemonCard extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { image_url, name, cost, price } = this.props.card;\r\n    const profit = price - cost;\r\n    const isProfitable = profit >= 0;\r\n\r\n    return (\r\n      <Grid item xs={10} sm={6} md={4}>\r\n        <img src={image_url} alt={\"Pokemon Card of \" + name} />\r\n        <Typography variant=\"h6\">\r\n          <b>{name}</b>\r\n        </Typography>\r\n        <Typography variant={\"subtitle1\"}>\r\n          ${price.toFixed(2)}{\" \"}\r\n          <Typography\r\n            display=\"inline\"\r\n            variant=\"subtitle1\"\r\n            className={\r\n              isProfitable\r\n                ? this.props.classes.profitable\r\n                : this.props.classes.loss\r\n            }\r\n          >\r\n            ({isProfitable ? \"+\" : \"-\"}${profit.toFixed(2)})\r\n          </Typography>\r\n        </Typography>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PokemonCard);\r\n","import { React, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Grid, Typography } from \"@material-ui/core\";\r\nimport PokemonCard from \"./Card\";\r\nimport Axios from \"axios\";\r\n\r\nconst styles = (theme) => ({\r\n  gridContainer: {\r\n    maxWidth: \"100%\",\r\n    padding: \"30px\",\r\n  },\r\n  profitable: {\r\n    color: \"green\",\r\n  },\r\n  loss: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nclass Homepage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        name: \"Riley\",\r\n        total_asset_value: 2152.28,\r\n        total_profit_loss: 1252.28,\r\n      },\r\n      cards: [\r\n        {\r\n          name: \"Charizard\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/base4/4.png\",\r\n          price: 673.48,\r\n        },\r\n        {\r\n          name: \"Articuno\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/base3/2.png\",\r\n          price: 64.99,\r\n        },\r\n        {\r\n          name: \"Pikachu\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/pop6/9.png\",\r\n          price: 69.98,\r\n        },\r\n        {\r\n          name: \"Mew V\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/swsh3/69.png\",\r\n          price: 19.9,\r\n        },\r\n        {\r\n          name: \"Mewtwo-EX\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/xy12/103.png\",\r\n          price: 199.99,\r\n        },\r\n        {\r\n          name: \"Shaymin LV.X\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/dpp/DP39.png\",\r\n          price: 100.95,\r\n        },\r\n        {\r\n          name: \"Machamp\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/xyp/XY13.png\",\r\n          price: 75,\r\n        },\r\n        {\r\n          name: \"Shining Tyranitar\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/neo4/113.png\",\r\n          price: 750,\r\n        },\r\n        {\r\n          name: \"Rocket's Suicune ex\",\r\n          cost: 100,\r\n          image_url: \"https://images.pokemontcg.io/ex7/105.png\",\r\n          price: 197.99,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  //   fetchData = () => {\r\n  //     Axios({\r\n  //       method: \"GET\",\r\n  //       headers: {\r\n  //         \"Access-Control-Allow-Headers\": \"*\",\r\n  //         \"Access-Control-Allow-Origin\": \"*\",\r\n  //         \"Access-Control-Allow-Methods\": \"*\",\r\n  //       },\r\n  //       url:\r\n  //         \"https://vn6t1iuloj.execute-api.ap-southeast-1.amazonaws.com/getCardData\",\r\n  //       data: {\r\n  //         card_ids: [\r\n  //           \"base4-4\",\r\n  //           \"base3-2\",\r\n  //           \"pop6-9\",\r\n  //           \"swsh3-69\",\r\n  //           \"xy12-103\",\r\n  //           \"dpp-DP39\",\r\n  //           \"xyp-XY13\",\r\n  //           \"neo4-113\",\r\n  //           \"ex7-105\",\r\n  //         ],\r\n  //       },\r\n  //     })\r\n  //       .then((res) => {\r\n  //         const { data } = res.data;\r\n\r\n  //         const cardsData = [];\r\n\r\n  //         for (const card of data.cards) {\r\n  //           cardsData.push(card);\r\n  //         }\r\n\r\n  //         const userObject = data.user;\r\n\r\n  //         console.log(cardsData);\r\n\r\n  //         this.setState({\r\n  //           user: userObject,\r\n  //           cards: cardsData,\r\n  //         });\r\n  //       })\r\n  //       .catch((error) => {\r\n  //         console.log(error);\r\n  //       });\r\n  //   };\r\n\r\n  componentDidMount = () => {\r\n    // this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    const isProfitable = this.state.user.total_profit_loss >= 0;\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={7}\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        className={this.props.classes.gridContainer}\r\n      >\r\n        <Grid\r\n          container\r\n          justify={\"space-around\"}\r\n          alignItems={\"baseline\"}\r\n          xs={12}\r\n        >\r\n          <Grid xs={4}>\r\n            <Typography variant=\"h5\" align=\"left\">\r\n              <b>Your Collection</b>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid xs={4}>\r\n            <Typography variant=\"h6\" align=\"right\">\r\n              Total Asset Value: ${\" \"}\r\n              {this.state.user.total_asset_value.toFixed(2)}{\" \"}\r\n              <Typography\r\n                display=\"inline\"\r\n                variant=\"h6\"\r\n                className={\r\n                  isProfitable\r\n                    ? this.props.classes.profitable\r\n                    : this.props.classes.loss\r\n                }\r\n              >\r\n                ({isProfitable ? \"+\" : \"-\"} ${\" \"}\r\n                {this.state.user.total_profit_loss} )\r\n              </Typography>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        {this.state.cards.map((card, index) => (\r\n          <PokemonCard key={index} card={card} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Homepage);\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Homepage from \"./screens/homepage/Homepage.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"beige\" }}>\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}