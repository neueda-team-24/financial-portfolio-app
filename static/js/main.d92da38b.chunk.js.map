{"version":3,"sources":["logo.svg","screens/homepage/Card.js","screens/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","props","this","card","image_url","name","cost","price","profit","isProfitable","Grid","item","xs","sm","md","src","alt","Typography","variant","Tooltip","title","toFixed","display","className","classes","profitable","loss","Math","abs","PureComponent","withStyles","theme","color","Homepage","fetchData","a","axios","post","card_ids","headers","then","res","data","user","cards","setState","catch","error","console","log","componentDidMount","state","CircularProgress","style","marginTop","marginBottom","total_profit_loss","container","direction","spacing","justify","alignItems","gridContainer","padding","total_asset_value","length","map","index","maxWidth","App","backgroundColor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d92da38b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { React, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography, Tooltip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  profitable: {\r\n    color: \"green\",\r\n  },\r\n  loss: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nclass PokemonCard extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { image_url, name, cost, price } = this.props.card;\r\n    const profit = price - cost;\r\n    const isProfitable = profit >= 0;\r\n\r\n    return (\r\n      <Grid item xs={10} sm={6} md={3}>\r\n        <img src={image_url} alt={\"Pokemon Card of \" + name} />\r\n        <Typography variant=\"h6\">\r\n          <b>{name}</b>\r\n        </Typography>\r\n        <Tooltip title=\"Current Price (Profit / Loss)\">\r\n          <Typography variant={\"subtitle1\"}>\r\n            ${price.toFixed(2)}{\" \"}\r\n            <Typography\r\n              display=\"inline\"\r\n              variant=\"subtitle1\"\r\n              className={\r\n                isProfitable\r\n                  ? this.props.classes.profitable\r\n                  : this.props.classes.loss\r\n              }\r\n            >\r\n              ({isProfitable ? \"+\" : \"-\"}${Math.abs(profit).toFixed(2)})\r\n            </Typography>\r\n          </Typography>\r\n        </Tooltip>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(PokemonCard);\r\n","import { React, PureComponent } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Tooltip, Typography, CircularProgress } from \"@material-ui/core\";\r\nimport PokemonCard from \"./Card\";\r\nimport axios from \"axios\";\r\n\r\nconst styles = (theme) => ({\r\n  gridContainer: {\r\n    maxWidth: \"100%\",\r\n    padding: \"30px\",\r\n  },\r\n  profitable: {\r\n    color: \"green\",\r\n  },\r\n  loss: {\r\n    color: \"red\",\r\n  },\r\n});\r\n\r\nclass Homepage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      cards: null,\r\n    };\r\n  }\r\n\r\n  fetchData = async () => {\r\n    const result = await axios\r\n      .post(\r\n        \"https://vn6t1iuloj.execute-api.ap-southeast-1.amazonaws.com/appData\",\r\n        {\r\n          card_ids: [\r\n            \"base4-4\",\r\n            \"base3-2\",\r\n            \"pop6-9\",\r\n            \"swsh3-69\",\r\n            \"xy12-103\",\r\n            \"dpp-DP39\",\r\n            \"xyp-XY13\",\r\n            \"neo4-113\",\r\n            \"ex7-105\",\r\n          ],\r\n        },\r\n        {\r\n          headers: {\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Methods\": \"POST\",\r\n            \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        const { user, cards } = res.data;\r\n        this.setState({\r\n          user: { ...user },\r\n          cards: [...cards],\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.fetchData();\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.cards || !this.state.user) {\r\n      // return loading component\r\n\r\n      return (\r\n        <CircularProgress style={{ marginTop: \"45vh\", marginBottom: \"50vh\" }} />\r\n      );\r\n    }\r\n\r\n    const isProfitable = this.state.user.total_profit_loss >= 0;\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        spacing={7}\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        className={this.props.classes.gridContainer}\r\n      >\r\n        <Grid xs={12} style={{ padding: \"30px\" }}>\r\n          <Typography variant=\"h5\">\r\n            <b>Your Collection</b>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <Typography variant=\"h6\">\r\n            Total Asset Value: ${this.state.user.total_asset_value.toFixed(2)}{\" \"}\r\n            <Tooltip title=\"Unrealised Gains / Losses\">\r\n              <Typography\r\n                display=\"inline\"\r\n                variant=\"h6\"\r\n                className={\r\n                  isProfitable\r\n                    ? this.props.classes.profitable\r\n                    : this.props.classes.loss\r\n                }\r\n              >\r\n                ({isProfitable ? \"+\" : \"-\"}${this.state.user.total_profit_loss}{\" \"}\r\n                )\r\n              </Typography>\r\n            </Tooltip>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid xs={12}>\r\n          <Typography variant=\"h6\">\r\n            Total Number of Cards: {this.state.cards.length}\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {this.state.cards.map((card, index) => (\r\n          <PokemonCard key={index} card={card} />\r\n        ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Homepage);\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Homepage from \"./screens/homepage/Homepage.js\";\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"beige\" }}>\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}